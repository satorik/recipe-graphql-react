type Query {
  ingredients: [Ingredient!]!
  recipes(query: String): [Recipe!]!
  users(query: String): [User!]!
 # menu: [Menu!]!
}

type Mutation {
  createUser(data: CreateUserInput): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput): User!
  createRecipe(data: CreateRecipeInput): Recipe!
  deleteRecipe(id: ID!): Recipe!
  updateRecipe(id: ID!, data: UpdateRecipeInput) : Recipe!
  updateRecipeContent(id: ID!, data: UpdateRecipeInputContent) : RecipeContent!
  createRecipeContent(id: ID!, data: CreateRecipeInputContent) : RecipeContent!
  deleteRecipeContent(id: ID!) : RecipeContent!
  createIngredient(data: CreateIngredientInput): Ingredient!
  #createMenu(data: CreateMenuInput): Menu!
  #deleteMenu(id: ID!): Menu!
}

type Subscription {
  count: Int!
}

type Ingredient {
  id: ID!
  name: String!
  metrics: String!
  ccal: Int!
  fat: Int!
  carbon: Int!
  protein: Int!
}

type Recipe {
  id: ID!
  title: String!
  desc: String
  rules: String!
  author: User!
  recipeContent: [RecipeContent!]!
}

type RecipeContent {
  id: ID!
  ingredient: Ingredient!
  amount: Float!
  recipe: Recipe!
}

# type Menu {
#   id: ID!
#   date: String!
#   author: User!
#   content: [MenuContent!]!
# }

# type MenuContent {
#   id: ID!
#   recipes: [Recipe!]!
#   for: User!
#   type: String
#   menu: ID!
# }

# type Storage {
#   id: ID!
#   author: User!
#   date: String!
# }

# type StorageContent {
#   id: ID!
#   ingredient: Ingredient!
#   amount: Float!
# }

# type ShoppingList {
#   id: ID!
#   author: User!
#   date: String!
# }

# type ShoppingListContent {
#   id: ID!
#   ingredient: Ingredient!
#   amount: Float!
# }

type User {
  id: ID!
  name: String!
  email: String
  password: String!
  recipes: [Recipe!]
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
}

input CreateRecipeInput {
  title: String!
  desc: String
  rules: String!
  author: ID!
  recipeContent: [CreateRecipeInputContent!]!
}

input UpdateRecipeInputContent {
  ingredient: ID
  amount: Float
}

input CreateRecipeInputContent {
  ingredient: ID!
  amount: Float!
}

input UpdateRecipeInput {
  title: String
  desc: String
  rules: String
}

input CreateIngredientInput {
  name: String!
  metrics: String!
  ccal: Int
  fat: Int
  carbon: Int
  protein: Int
}

# input CreateMenuContentInput {
#   recipes: [ID!]!
#   for: ID!
#   type: String
# }

# input CreateMenuInput {
#   date: String!
#   author: ID!
#   content: [CreateMenuContentInput!]!
# }